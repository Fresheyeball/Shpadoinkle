stages:
  - Lint
  - Linux Build
  - Darwin Build
  - Linux Shell
  - Darwin Shell
  - Documentation
  - Push Artifacts

Check Style:
  stage: Lint
  needs: []
  script:
  - nix/style-check.sh

Hlint:
  stage: Lint
  needs: []
  script:
  - nix-shell nix/lint.nix --run 'hlint . -j'

Packages GHC 8.6.5 on Linux:
  stage: Linux Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build --argstr compiler ghc865 --fallback

Isreal NixOPS:
  stage: Linux Build
  needs:
  - Check Style
  - Hlint
  script:
  - eval `ssh-agent -s`
  - ssh-add /run/keys/isreal-deploy
  - nix-shell --command "./nix/test-isreal.sh"

Packages GHCJS 8.6 on Linux:
  stage: Linux Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build --argstr compiler ghc865 --arg isJS true --fallback

Swan Shell:
  stage: Linux Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build isreal/swan-shell.nix --fallback

Developer Tools:
  stage: Linux Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build developer-tools -o devtools
  - cp devtools Shpadoinkle-developer-tools.zip
  - rm devtools
  artifacts:
    untracked: true

Packages GHC 8.6.5 on Darwin:
  stage: Darwin Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build --argstr compiler ghc865 --argstr system x86_64-darwin --fallback

Packages GHCJS 8.6 on Darwin:
  stage: Darwin Build
  needs:
  - Check Style
  - Hlint
  script:
  - nix-build --argstr compiler ghc865 --argstr system x86_64-darwin --arg isJS true --fallback

Dev Shell GHC 8.6.5 on Linux:
  stage: Linux Shell
  needs:
  - Packages GHC 8.6.5 on Linux
  script:
  - nix-shell --run "echo works" --arg enableLibraryProfiling false --fallback

Dev Shell GHCJS 8.6 on Linux:
  stage: Linux Shell
  needs:
  - Packages GHCJS 8.6 on Linux
  script:
  - nix-shell --run "echo works" --arg enableLibraryProfiling false --arg isJS true --fallback

Dev Shell GHC 8.6.5 on Darwin:
  stage: Darwin Shell
  needs:
  - Packages GHC 8.6.5 on Darwin
  script:
  - nix-build --run "echo works" --arg enableLibraryProfiling false --argstr system x86_64-darwin --fallback

Dev Shell GHCJS 8.6 on Darwin:
  stage: Darwin Shell
  needs:
  - Packages GHCJS 8.6 on Darwin
  script:
  - nix-shell --run "echo works" --arg enableLibraryProfiling false --argstr system x86_64-darwin --arg isJS true --fallback

Website:
  stage: Documentation
  needs:
  - Check Style
  - Packages GHCJS 8.6 on Linux
  - Packages GHC 8.6.5 on Linux
  script:
  - nix-build website --arg ci true --fallback

Isreal:
  stage: Push Artifacts
  needs:
  - Packages GHCJS 8.6 on Linux
  - Isreal NixOPS
  script:
  - eval `ssh-agent -s`
  - ssh-add /run/keys/isreal-deploy
  - nix-shell --command "./nix/deploy-isreal.sh"
  only:
  - master
  - isreal

pages:
  stage: Push Artifacts
  needs:
  - Website
  - Packages GHCJS 8.6 on Linux
  script:
  - ./nix/build-pages.sh
  artifacts:
    paths:
    - public
  only:
  - master

Upload to Cachix:
  stage: Push Artifacts
  needs:
  - Packages GHC 8.6.5 on Linux
  - Packages GHCJS 8.6 on Linux
  - Packages GHC 8.6.5 on Darwin
  - Packages GHCJS 8.6 on Darwin
  - Dev Shell GHC 8.6.5 on Linux
  - Dev Shell GHCJS 8.6 on Linux
  - Dev Shell GHC 8.6.5 on Darwin
  - Dev Shell GHCJS 8.6 on Darwin
  script:
  - nix-env -iA cachix -f https://cachix.org/api/v1/install
  - cachix authtoken $AUTHTOKEN
  - ./nix/cachix.sh
  only:
  - master
